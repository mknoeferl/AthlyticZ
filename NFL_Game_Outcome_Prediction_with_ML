import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, roc_auc_score

# Load dataset (example: NFL game stats from Kaggle)
df = pd.read_csv("nfl_games.csv")

# Feature engineering
df['turnover_diff'] = df['takeaways'] - df['giveaways']
features = ['total_yards', 'pass_yards', 'rush_yards', 'turnover_diff', 'penalty_yards']
X = df[features]
y = df['win']  # 1 if win, 0 if loss

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Random Forest model
model = RandomForestClassifier(n_estimators=200, random_state=42)
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("ROC-AUC:", roc_auc_score(y_test, model.predict_proba(X_test)[:,1]))

# Feature Importance
import matplotlib.pyplot as plt
importances = model.feature_importances_
plt.barh(features, importances)
plt.xlabel("Importance")
plt.title("Feature Importance in NFL Game Predictions")
plt.show()
