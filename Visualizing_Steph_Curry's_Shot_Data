# Import libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.patches import Arc
import matplotlib.cm as cm
import seaborn as sns

# Read in CSV from desktop
curry_df = pd.read_csv("/Users/Mary/Desktop/curry_shot_chart_2023.csv")

# Rename shot types from numbers to readable labels
curry_df['shot_type'] = curry_df['shot_type'].replace({2: '2-point shot', 3: '3-point shot'})

# Rename result from True/False to Made/Missed
curry_df['result'] = curry_df['result'].replace({True: 'Made', False: 'Missed'})

# Print first 5 rows
print(curry_df.head())

# Bar Chart 1: Frequency of Each Shot Type
plt.figure(figsize=(8,5))
sns.countplot(x='shot_type', data=curry_df, palette='viridis')
plt.title("Frequency of Each Shot Type")
plt.xlabel("Shot Type")
plt.ylabel("Count")
plt.show()

# Bar Chart 2: Shooting Accuracy by Shot Type

# Group by shot_type and result, calculate percentage
accuracy_by_type = curry_df.groupby('shot_type')['result'].value_counts(normalize=True).unstack().fillna(0)

# Plot as grouped bar chart
accuracy_by_type[['Made', 'Missed']].plot(kind='bar', 
                                          stacked=True,
                                          color=['green', 'red'], 
                                          figsize=(8,5))
plt.title("Shooting Accuracy by Shot Type")
plt.xlabel("Shot Type")
plt.ylabel("Accuracy (%)")
plt.ylim(0, 1)
plt.xticks(rotation=0)
plt.show()

# --- Coordinate conversion function ---

def convert_coords(df):
    """
    Converts shot coordinates from image-based space to court space

    Assumes:
    - 'left' ranges from 0 to ~480 (image pixels) â†’ center it around 0
    - 'top' already increases from basket to halfcourt, so no flip needed
    """
    df['court_x'] = df['left'] - 240  # Center X around 0 to match court
    df['court_y'] = df['top']         # Y is already in the correct direction

    return df

# Apply coordinate conversion to Curry's shot data
curry_df = convert_coords(curry_df)

# --- Court Drawing Function ---

def draw_nba_court(axis=None):
    """
    Draws an NBA halfcourt using matplotlib primitives.

    Args:
        axis (matplotlib axis): Optional axis to draw on. Creates one if not provided.

    Returns:
        fig, axis: Figure and axis with the court drawn
    """
    if axis is None:
        fig = plt.figure(figsize=(9, 9))
        axis = fig.add_subplot(111, aspect='auto')
    else:
        fig = None

    # --- Court Outline (Baseline, Sidelines, Halfcourt Line) ---
    axis.plot([-250, 250], [-47.5, -47.5], 'k-')     # Baseline
    axis.plot([-250, -250], [-47.5, 422.5], 'k-')    # Left sideline
    axis.plot([250, 250], [-47.5, 422.5], 'k-')      # Right sideline
    axis.plot([-250, 250], [422.5, 422.5], 'k-')     # Halfcourt line

    # --- Backboard ---
    axis.plot([-30, 30], [-10, -10], 'k-', lw=2)

    # --- Paint / Lane ---
    axis.plot([-80, -80], [-47.5, 142.5], 'k-')
    axis.plot([80, 80], [-47.5, 142.5], 'k-')
    axis.plot([-60, -60], [-47.5, 142.5], 'k-')
    axis.plot([60, 60], [-47.5, 142.5], 'k-')
    axis.plot([-80, 80], [142.5, 142.5], 'k-')     # Free throw line

    # --- Hoop and Restricted Area ---
    hoop = Arc((0, 0), 15, 15, theta1=0, theta2=360, lw=1.5, color='black')
    restricted = Arc((0, 0), 80, 80, theta1=0, theta2=180, lw=1.5, color='black')
    axis.add_patch(hoop)
    axis.add_patch(restricted)

    # --- Free Throw Circle ---
    axis.add_patch(Arc((0, 142.5), 120, 120, theta1=0, theta2=180, lw=1.5, color='black'))     # Top half
    axis.add_patch(Arc((0, 142.5), 120, 120, theta1=180, theta2=360, lw=1.5, linestyle='--', color='black'))  # Bottom half (dashed)

    # --- 3-Point Lines ---
    axis.plot([-220, -220], [-47.5, 92.5], 'k-')     # Left corner 3
    axis.plot([220, 220], [-47.5, 92.5], 'k-')       # Right corner 3
    axis.add_patch(Arc((0, 0), 475, 475, theta1=22, theta2=158, lw=1.5, color='black'))   # 3-pt arc

    # --- Halfcourt Circle ---
    axis.add_patch(Arc((0, 422.5), 122, 122, theta1=180, theta2=360, lw=1.5, color='black'))

    # --- Axis Settings ---
    axis.set_xlim(-250, 250)
    axis.set_ylim(-47.5, 470)
    axis.set_aspect(1)     # Equal aspect ratio
    axis.axis('off')       # Hide axes

    return fig, axis

# --- Heatmap Visualization ---

# Create plot and axis
fig, ax = plt.subplots(figsize=(9, 9))

# Draw halfcourt on axis
draw_nba_court(ax)

# Overlay KDE heatmap of Curry's shot locations
kde = sns.kdeplot(
    x=curry_df['court_x'], 
    y=curry_df['court_y'], 
    fill=True, 
    cmap='Reds', 
    bw_adjust=0.8, 
    alpha=0.6, 
    levels=100, 
    thresh=0.05, 
    ax=ax
)

plt.title("Steph Curry Shots", fontsize=16)
plt.show()
